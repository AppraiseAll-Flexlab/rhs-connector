var _this=this;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _DBConnect=require("./DBConnect");var _rhsCommon=require("rhs-common");var _Transaction=require("./Transaction");var _Transaction2=_interopRequireDefault(_Transaction);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var isJSONObject=_rhsCommon.PureFunctions.isJSONObject,asyncIterator=_rhsCommon.PureFunctions.asyncIterator,resolveValue=_rhsCommon.PureFunctions.resolveValue;var getNextDueDate=_rhsCommon.RhsSchedule.getNextDueDate;var Status={PROCESS:"In Process",SUCCESS:"Success",FAIL:"Failed",PROCESS_ANOTHER:"processOnAnotherServer"};var timer=void 0;var TABLES={CRON_PROCESS:"CronProcessNew",CRON_LOGS:"CronLogsNew",VERSION_CONTROL:"App_VersionControlNew",APP_CRONS:"app_crons_v3"};var runCron=function runCron(_ref){var db=_ref.db,port=_ref.port,crons=_ref.crons,mailConfig=_ref.mailConfig,context=_ref.context,config=_ref.config;var _ref2=config||{},cronTables=_ref2.cronTables;if(cronTables&&Object.keys(cronTables).length>0){TABLES=_extends({},cronTables);}if(!crons||Object.keys(crons).length===0){return;}saveAppCronLogs(crons,db);try{return init(crons,{db:db,port:port,mailConfig:mailConfig}).then(function(_){timer=setInterval(function(){return isThreadLive(db,port).then(function(isLive){isLive=isLive&&isLive.result&&isLive.result[0];if(!isLive){clearInterval(timer);timer=void 0;return;}return executeCrons(crons,{db:db,port:port,mailConfig:mailConfig,context:context}).catch(function(error){console.log("error in executing cron >>>>>"+error.stack);sendErrorMail(error,{db:db,mailConfig:mailConfig});});});},10000);}).catch(function(err){console.log("error in run cron >>>>>"+err.stack);sendErrorMail(err,{db:db,mailConfig:mailConfig});});}catch(err){console.log("error in run cron >>>>>"+err.stack);sendErrorMail(err,{db:db,mailConfig:mailConfig});}};var isThreadLive=function isThreadLive(db,port){return db.find(TABLES.VERSION_CONTROL,{filter:{serverName:"Cron",serverPort:port},fields:{_id:1}});};var saveCronServerInfo=function saveCronServerInfo(db,port){return db.findAndModify(TABLES.VERSION_CONTROL,{serverName:"Cron",serverPort:port},{$set:{serverPort:port}},void 0,{upsert:true});};var init=function init(crons,_ref3){var db=_ref3.db,port=_ref3.port;var cronNames=Object.keys(crons);cronNames.forEach(function(cronName){var cronValue=crons[cronName];var schedule=cronValue.schedule,methods=cronValue.methods;if(!schedule||isJSONObject(schedule)&&Object.keys(schedule).length===0){throw new Error("Must Provide Mandatory field Schedule for Cron ["+cronName+"]");}if(!methods){throw new Error("Please provide value of mandatory fields methods in cron ["+cronName+"]");}populateSchedule(cronName,cronValue);});return saveCronServerInfo(db,port).then(function(_){return managePendingCrons(crons,db,port);});};var managePendingCrons=function managePendingCrons(crons,db,port){var result,i,_result$i,_id,cron,status,runningPort,cronInfo,schedule;return regeneratorRuntime.async(function managePendingCrons$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return regeneratorRuntime.awrap(db.find(TABLES.CRON_PROCESS,{fields:{_id:1,cron:1,status:1,port:1}}));case 2:result=_context.sent;result=result&&result.result;i=0;case 5:if(!(i<result.length)){_context.next=18;break;}_result$i=result[i],_id=_result$i._id,cron=_result$i.cron,status=_result$i.status,runningPort=_result$i.port;cronInfo=crons[cron];if(!(cronInfo&&runningPort!==port)){_context.next=12;break;}cronInfo[Status.PROCESS_ANOTHER]=true;_context.next=15;break;case 12:if(cronInfo){schedule=cronInfo.schedule;delete schedule["nextDueOn"];delete schedule["nextActiveOn"];}_context.next=15;return regeneratorRuntime.awrap(db.remove(TABLES.CRON_PROCESS,{_id:_id}));case 15:i++;_context.next=5;break;case 18:case"end":return _context.stop();}}},null,_this);};var populateSchedule=function populateSchedule(cronName,_ref4){var schedule=_ref4.schedule;if(typeof schedule==="string"){}var repeats=schedule.repeats,startsOn=schedule.startsOn;if(!repeats){throw new Error("Repeats is mandatory in schedules for Cron ["+cronName+"]");}if(startsOn){schedule["startsOn"]=new Date(startsOn);}var nextDueDate=getNextDueDate(schedule);schedule["nextDueOn"]=nextDueDate.nextDueOn;schedule["nextActiveOn"]=nextDueDate.nextActiveOn;};var executeCrons=function executeCrons(crons,_ref5,keepItExecuting){var db=_ref5.db,port=_ref5.port,mailConfig=_ref5.mailConfig,context=_ref5.context;return addCronsToProcess(crons,{db:db,port:port}).then(function(cronsToProcess){return asyncIterator(cronsToProcess,function(index,cronInfo){var _id=cronInfo._id,cronId=cronInfo.cronId,cronValue=cronInfo.value;var error=void 0;var cronLogId=void 0;var startTime=new Date();cronValue.lastProcessId=_id;return db.update(TABLES.CRON_PROCESS,{_id:_id},{$set:{status:"processing"}}).then(function(_){return manageCronLogs("insert",{cron:cronId,status:Status.PROCESS,startTime:startTime},db);}).then(function(cronInsert){cronLogId=cronInsert&&cronInsert.result&&cronInsert.result._id;var dbConnect=void 0;var isSkipTx=cronValue.skipTX;if(isSkipTx){dbConnect=(0,_DBConnect.DbConnect)(db);}else{var transactionConnect=new _Transaction2.default(db,void 0,{port:port,mailConfig:mailConfig,context:context});dbConnect=(0,_DBConnect.DbConnect)(transactionConnect);}return executeProcess({maxTimeout:cronValue.maxTimeout,name:cronId,source:"Cron",functionName:cronValue.methods,startTime:startTime},dbConnect,mailConfig).then(function(_){if(isSkipTx===void 0){return dbConnect((0,_DBConnect.commit)());}}).catch(function(err){err=err[0]?err[0]:err;error=JSON.stringify({message:err.message,stack:err.stack});if(isSkipTx===void 0){return dbConnect((0,_DBConnect.rollback)());}}).then(function(_){if(error){sendErrorMail(JSON.parse(error),{cronId:cronId,db:db,developers:cronValue.developers,mailConfig:mailConfig});}});}).then(function(_){var schedule=cronValue.schedule;var nextRunDate=getNextDueDate(schedule);schedule["nextDueOn"]=nextRunDate.nextDueOn;schedule["nextActiveOn"]=nextRunDate.nextActiveOn;var endTime=new Date();var totalTime=endTime-startTime;return manageLogs({_id:cronLogId,cron:cronId,developers:cronValue.developers,error:error,nextRunDate:nextRunDate,endTime:endTime,totalTime:totalTime},db);}).then(function(_){return db.remove(TABLES.CRON_PROCESS,{_id:_id});}).then(function(_){delete cronValue.lastProcessId;delete cronValue["processing"];}).catch(function(err){delete cronValue["processing"];throw err;});}).then(function(_){return isContinueExecution({db:db,port:port},keepItExecuting);});});};var isContinueExecution=function isContinueExecution(_ref6,keepItExecuting){var db=_ref6.db,port=_ref6.port;if(keepItExecuting){return new Promise(function(r){return r();});}if(timer===void 0){process.exit(0);}return isThreadLive(db,port).then(function(isLive){isLive=isLive&&isLive.result&&isLive.result[0];if(!isLive){process.exit(0);}});};var insertInCronProcessIfRequired=function insertInCronProcessIfRequired(cronKey,cronInfo,cronsToProcess,_ref7){var db=_ref7.db,port=_ref7.port;if(cronInfo[Status.PROCESS_ANOTHER]){return db.find(TABLES.CRON_PROCESS,{filter:{cron:cronKey},fields:{_id:1,_createdOn:1}}).then(function(pendingCron){pendingCron=pendingCron&&pendingCron.result&&pendingCron[0];if(pendingCron){var diff=new Date()-pendingCron._createdOn;if(diff<1000*60*30){return false;}return db.remove(TABLES.CRON_PROCESS,{_id:pendingCron._id});}}).then(function(addInProcessRequired){if(addInProcessRequired===false){return;}delete cronInfo[Status.PROCESS_ANOTHER];return pushToProcess(cronKey,cronInfo,cronsToProcess,{db:db,port:port});});}else{return pushToProcess(cronKey,cronInfo,cronsToProcess,{db:db,port:port});}};var addCronsToProcess=function addCronsToProcess(crons,_ref8){var db=_ref8.db,port=_ref8.port;var cronsToProcess=[];var cronKeys=Object.keys(crons);return asyncIterator(cronKeys,function(index,cronKey){var cronInfo=crons[cronKey];var dueDate=cronInfo["schedule"]["nextActiveOn"];if(cronInfo["processing"]||dueDate>new Date()){return;}cronInfo["processing"]=true;return insertInCronProcessIfRequired(cronKey,cronInfo,cronsToProcess,{db:db,port:port}).catch(function(err){delete cronInfo["processing"];throw err;});}).then(function(_){return cronsToProcess;});};var pushToProcess=function pushToProcess(cronKey,cronInfo,cronsToProcess,_ref9){var db=_ref9.db,port=_ref9.port;return db.insert(TABLES.CRON_PROCESS,{cron:cronKey,port:port,_createdOn:new Date()}).catch(function(err){if(cronInfo.lastProcessId){return db.find(TABLES.CRON_PROCESS,{filter:{_id:cronInfo.lastProcessId,cron:cronKey},fields:{_id:1}}).then(function(runningCronProcess){if(runningCronProcess&&runningCronProcess.result){return runningCronProcess;}throw err;});}throw err;}).then(function(cronRecord){var cronRecordId=cronRecord&&cronRecord.result&&cronRecord.result._id;cronsToProcess.push({_id:cronRecordId,cronId:cronKey,value:cronInfo});});};var manageLogs=function manageLogs(param,db){var _id=param._id,cron=param.cron,error=param.error,endTime=param.endTime,totalTime=param.totalTime,nextRunDate=param.nextRunDate,startTime=param.startTime;return manageCronLogs("update",{_id:_id,error:error,endTime:endTime,totalTime:totalTime,nextRunDate:nextRunDate.nextDueOn},db).then(function(){return manageAppCronLogs({cron:cron,error:error,nextRunDate:nextRunDate.nextDueOn,startTime:startTime,endTime:endTime},db);});};var manageCronLogs=function manageCronLogs(operation,value,db){if(value.status===void 0){value.status=value.error?Status.FAIL:Status.SUCCESS;}if(operation==="insert"){return db.insert(TABLES.CRON_LOGS,value);}else{var _id=value._id;delete value._id;return db.update(TABLES.CRON_LOGS,{_id:_id},{$set:value});}};var manageAppCronLogs=function manageAppCronLogs(param,db){var cron=param.cron;return db.update(TABLES.APP_CRONS,{cron:cron},{$set:param},void 0,{upsert:true});};var saveAppCronLogs=function saveAppCronLogs(crons,db){var insertedAppCronResult,insertedAppCron,cronToRemove,_iterator,_isArray,_i,_ref10,key,_key;return regeneratorRuntime.async(function saveAppCronLogs$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return regeneratorRuntime.awrap(db.find(TABLES.APP_CRONS,{fields:{cron:1,_id:0}}));case 2:insertedAppCronResult=_context2.sent;insertedAppCron=resolveValue(insertedAppCronResult.result,"cron");cronToRemove=insertedAppCron.filter(function(val){return!crons[val];})||[];_iterator=cronToRemove,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?typeof Symbol==="function"?Symbol.iterator:"@@iterator":"@@iterator"]();case 6:if(!_isArray){_context2.next=12;break;}if(!(_i>=_iterator.length)){_context2.next=9;break;}return _context2.abrupt("break",21);case 9:_ref10=_iterator[_i++];_context2.next=16;break;case 12:_i=_iterator.next();if(!_i.done){_context2.next=15;break;}return _context2.abrupt("break",21);case 15:_ref10=_i.value;case 16:key=_ref10;_context2.next=19;return regeneratorRuntime.awrap(db.remove(TABLES.APP_CRONS,{cron:key}));case 19:_context2.next=6;break;case 21:_context2.t0=regeneratorRuntime.keys(crons);case 22:if((_context2.t1=_context2.t0()).done){_context2.next=29;break;}_key=_context2.t1.value;if(!(insertedAppCron.indexOf(_key)<0)){_context2.next=27;break;}_context2.next=27;return regeneratorRuntime.awrap(db.insert(TABLES.APP_CRONS,{cron:_key}));case 27:_context2.next=22;break;case 29:case"end":return _context2.stop();}}},null,_this);};var executeProcess=function executeProcess(params,dbConnect,mailConfig){var _ref11=params||{},maxTimeout=_ref11.maxTimeout,resolveAfterTimeout=_ref11.resolveAfterTimeout,functionName=_ref11.functionName,_ref11$functionParame=_ref11.functionParameters,functionParameters=_ref11$functionParame===undefined?{}:_ref11$functionParame;return new Promise(function(resolve,reject){var timer=void 0;try{dbConnect((0,_DBConnect.invoke)(functionName,functionParameters,{_dbConnect:dbConnect,mailConfig:mailConfig})).then(function(result){if(timer){clearInterval(timer);}resolve(result);}).catch(function(err){if(timer){clearInterval(timer);}reject(err);});timer=setInterval(function(_){sendLongProcessingMails(params,dbConnect,mailConfig).then(function(_){if(resolveAfterTimeout){clearInterval(timer);resolve("MAX_TIMEOUT_REACHED");}});},maxTimeout||1000*60*15);}catch(err){if(timer){clearInterval(timer);}reject(err);}});};var sendLongProcessingMails=function sendLongProcessingMails(_ref12,dbConnect,mailConfig){var source=_ref12.source,name=_ref12.name,startTime=_ref12.startTime,functionName=_ref12.functionName;var mailOptions={to:mailConfig&&mailConfig.applicationDeveloper||mailConfig&&mailConfig.frameworkDeveloper||"rohit.bansal@daffodilsw.com",from:"developers@daffodilsw.com",subject:"Long Processing "+source+"-"+name+" "+(new Date()-startTime)/60000,body:"Function ["+functionName+"] in "+source+" ["+name+"] is taking long time to process since "+JSON.stringify(startTime)};return dbConnect((0,_DBConnect.invoke)("_sendMail",mailOptions));};var sendErrorMail=function sendErrorMail(err){var _ref13=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},cronId=_ref13.cronId,db=_ref13.db,developers=_ref13.developers,mailConfig=_ref13.mailConfig;console.log("Error>>>>>>",err.stack);var os=require("os");var date=new Date();var options={};options.to=developers||mailConfig&&mailConfig.applicationDeveloper||mailConfig&&mailConfig.frameworkDeveloper||"rohit.bansal@daffodilsw.com";options.from="developer@daffodilsw.com";options.subject="Error in Cron : "+(cronId||"");options.text="\n        Error: "+err.message+",\n        dir: "+__dirname+",\n        host: "+os.hostname()+",\n        Date: "+date+",\n        Stack: "+err.stack+"\n    ";var dbConnect=(0,_DBConnect.DbConnect)(db);return dbConnect((0,_DBConnect.invoke)("_sendMail",options));};module.exports={runCron:runCron,executeCrons:executeCrons};