Object.defineProperty(exports,"__esModule",{value:true});exports.validate=undefined;var _rhsCommon=require("rhs-common");var getFieldType=_rhsCommon.PureFunctions.getFieldType;var validate=exports.validate=function validate(models){models.forEach(function(model){validateSchema(model);});};var validateSchema=function validateSchema(model){var queries=model._queries;for(var q in queries){var query=queries[q];validateQueryFields(model,q,query._fields);validateQueryFilters(model,q,query._filters);validateQuerySort(model,query._sort);validateQuerySkipLimit(model,"limit",query._limit);validateQuerySkipLimit(model,"skip",query._skip);}};var validateQueryFields=function validateQueryFields(model,queryId,fields){var schema=model._schema;for(var f in fields){var fieldValue=fields[f];var _fieldType=getFieldType(schema,f);if(_fieldType){if(_fieldType._isModel){validateQueryFields(_fieldType,queryId,fieldValue);}}else{throw new Error("Field :["+f+"] and Value :["+fieldValue+"] not found in Model :["+model._id+"] in Query :["+queryId+"]");}}};var validateQueryFilters=function validateQueryFilters(model,queryId,filters){var schema=model._schema;for(var f in filters){var filterValue=filter[f];var filterType=getFieldType(schema,f);if(filterType){if(fieldType._isModel){validateQueryFields(filterType,queryId,filterValue);}}else{throw new Error("Field :["+f+"] and Value :["+filterValue+"] not found in Model :["+model._id+"] in Query :["+queryId+"]");}}};var validateQuerySort=function validateQuerySort(model,sort){var schema=model._schema;for(var f in sort){if(schema[f]){var sortValue=sort[f];var sortModel=schema[f];if(sortValue!=1&&sortValue!=-1){throw new Error("Invalid Value found :["+sortValue+"] in model :["+model._id+"]");}}else{throw new Error("Field :["+f+"] not found in model :["+model._id+"]");}}};var validateQuerySkipLimit=function validateQuerySkipLimit(model,type,value){if(value&&typeof value!="number"){throw new Error("Invalid Value found :["+value+"] of "+type+" in model :["+model._id+"]");}};