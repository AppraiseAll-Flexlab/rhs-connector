Object.defineProperty(exports,"__esModule",{value:true});exports.sendSES=undefined;var _this=this;var _DBConnect=require("./DBConnect");var _Utility=require("./Utility");var sendSES=exports.sendSES=function sendSES(_ref){var options=_ref.options,config=_ref.config,args=_ref.args;var credentials,awsSESConfigurationSetName,_options,from,fromName,to,cc,subject,html,text,attachments,AWS,ses,mailcomposer,mail,message;return regeneratorRuntime.async(function sendSES$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(options){_context2.next=2;break;}throw new Error("Mandatory options are missing in send mail.");case 2:if(!(!config||!config.credentials)){_context2.next=4;break;}throw new Error("AWS SES Credentials Not Found");case 4:if(args){_context2.next=6;break;}throw new Error("args not provided to sendSES");case 6:credentials=config.credentials,awsSESConfigurationSetName=config.awsSESConfigurationSetName;_options=options,from=_options.from,fromName=_options.fromName,to=_options.to,cc=_options.cc,subject=_options.subject,html=_options.html,text=_options.text,attachments=_options.attachments;AWS=require("aws-sdk");AWS.config.update(credentials);ses=new AWS.SES({apiVersion:"2010-12-01"});options={from:fromName?fromName+" <"+from+">":from,to:to,cc:cc,subject:subject,html:html,text:text,attachments:attachments};_context2.next=14;return regeneratorRuntime.awrap((0,_Utility.addAttachmentIfRequired)(options,args));case 14:mailcomposer=require("mailcomposer");mail=mailcomposer(options);_context2.next=18;return regeneratorRuntime.awrap(new Promise(function(resolve,reject){mail.build(function _callee(err,message){return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(err){reject("Error SES: "+err);}else{resolve(message);}case 1:case"end":return _context.stop();}}},null,_this);});}));case 18:message=_context2.sent;_context2.next=21;return regeneratorRuntime.awrap(ses.sendRawEmail({ConfigurationSetName:awsSESConfigurationSetName,RawMessage:{Data:message}}).promise());case 21:return _context2.abrupt("return",_context2.sent);case 22:case"end":return _context2.stop();}}},null,_this);};