Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _MongoGrid=require("./MongoGrid");var _MongoGrid2=_interopRequireDefault(_MongoGrid);var _rhsCommon=require("rhs-common");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _toArray(arr){return Array.isArray(arr)?arr:Array.from(arr);}var populateDottedFields=_rhsCommon.PureFunctions.populateDottedFields,getNullOrObject=_rhsCommon.PureFunctions.getNullOrObject;var MongoClient=require("mongodb").MongoClient;var updateNative=function updateNative(mongoDB,table,filter,updates,options){return new Promise(function(resolve,reject){if(!updates){return resolve();}mongoDB.collection(table).update(filter,updates,options,function(err,result){if(err){reject(err);return;}else{resolve(result.result||result);}});});};var runPendingPulls=function runPendingPulls(mongoDB,table,filter,pendingPulls,options){return new Promise(function(resolve,reject){{if(!pendingPulls){resolve();return;}mongoDB.collection(table).update(filter,{$pull:pendingPulls},options,function(err,result){if(err){reject(err);}else{resolve();}});}});};var runPendingUpdates=function runPendingUpdates(mongoDB,table,_ref,options){var _ref2=_toArray(_ref),first=_ref2[0],rest=_ref2.slice(1);return new Promise(function(resolve,reject){{mongoDB.collection(table).update(first.filter,first.updates,options,function(err,result){if(err){reject(err);}else{resolve();}});}}).then(function(){if(rest&&rest.length>0){return runPendingUpdates(mongoDB,table,rest,options);}});};var MongoConnect=function(){function MongoConnect(_ref3){var config=_ref3.config,getDbCacheKey=_ref3.getDbCacheKey,systemProfiler=_ref3.systemProfiler;_classCallCheck(this,MongoConnect);this.config=config;this.getDbCacheKey=getDbCacheKey;this.systemProfiler=systemProfiler;this.dbs={};}_createClass(MongoConnect,[{key:"getDBName",value:function getDBName(){return this.config.dbName;}},{key:"invoke",value:function invoke(){}},{key:"connectDB",value:function connectDB(cacheKey){var _this=this;return new Promise(function(resolve,reject){var _config=_this.config,host=_config.host,port=_config.port,dbName=_config.dbName,authEnabled=_config.authEnabled,user=_config.user,pwd=_config.pwd,authDB=_config.authDB;cacheKey=cacheKey||"__"+dbName+"__";if(_this.dbs[cacheKey]){resolve(_this.dbs[cacheKey]);return;}var url="mongodb://"+host+":"+port+"/"+dbName;MongoClient.connect(url,function(err,db){if(err){console.log("Error in connect to db",err);reject(err);return;}db.on("timeout",function(error,db){delete _this.dbs[cacheKey];});db.on("close",function(_){delete _this.dbs[cacheKey];});if(authEnabled){try{db.authenticate(user,pwd,{authdb:authDB},function(err,res){if(err){reject(err);}else if(!res){reject(new Error("DB Authentication Failed"));}else{_this.dbs[cacheKey]=db;resolve(db);}});}catch(err){reject(err);}}else{_this.dbs[cacheKey]=db;resolve(db);}});});}},{key:"dropDB",value:function dropDB(){var _this2=this;return new Promise(function(resolve,reject){_this2.connectDB().then(function(mongoDB){mongoDB.dropDatabase(function(err,result){if(err){reject(err);}else{resolve(result);}});}).catch(function(e){return reject(e);});});}},{key:"dropTable",value:function dropTable(table){var _this3=this;return new Promise(function(resolve,reject){_this3.connectDB().then(function(mongoDB){mongoDB.collection(table).drop(function(err,result){if(err){reject(err);}else{resolve(result);}});}).catch(function(e){return reject(e);});});}},{key:"upload",value:function upload(file){return this.connectDB().then(function(mongoDB){return _MongoGrid2.default.upload(file,mongoDB);});}},{key:"download",value:function download(key){return this.connectDB().then(function(mongoDB){return _MongoGrid2.default.download(key,mongoDB);});}},{key:"downloadStream",value:function downloadStream(key){return this.connectDB().then(function(mongoDB){return _MongoGrid2.default.downloadFileStream(key,mongoDB);});}},{key:"mAggregate",value:function mAggregate(table,pipeline){var _this4=this;var _ref4=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref4.logger;var endLog=logger&&logger.startLog({op:"aggregate",table:table,log:{pipeline:pipeline},native:true});var endProfiler=this.systemProfiler&&this.systemProfiler.startLog({op:"mAggregate",table:table,query:{pipeline:pipeline}});return new Promise(function(resolve,reject){_this4.connectDB().then(function(mongoDB){mongoDB.collection(table).aggregate(pipeline,{allowDiskUse:true},function(err,result){if(err){reject(err);return;}endLog&&endLog();endProfiler&&endProfiler();resolve({result:result});});}).catch(function(e){reject(e);});});}},{key:"aggregate",value:function aggregate(table,pipeline){var _this5=this;var _ref5=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref5.logger;var endLog=logger&&logger.startLog({op:"aggregate",table:table,log:{pipeline:pipeline},native:true});var endProfiler=this.systemProfiler&&this.systemProfiler.startLog({op:"aggregate",table:table,query:{pipeline:pipeline}});return new Promise(function(resolve,reject){var cacheKey=_this5.getDbCacheKey?_this5.getDbCacheKey({op:"aggregate",dbName:_this5.getDBName(),table:table}):void 0;_this5.connectDB(cacheKey).then(function(mongoDB){mongoDB.collection(table).aggregate(pipeline,{allowDiskUse:true},function(err,result){if(err){reject(err);return;}endLog&&endLog();endProfiler&&endProfiler();resolve({result:result});});}).catch(function(e){reject(e);});});}},{key:"find",value:function find(table,query){var _this6=this;var _ref6=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref6.logger;var filter=query.filter,fields=query.fields,restOptions=_objectWithoutProperties(query,["filter","fields"]);fields=populateDottedFields(_extends({},fields));var endLog=logger&&logger.startLog({op:"find",table:table,log:{query:query},native:true});var endProfiler=this.systemProfiler&&this.systemProfiler.startLog({op:"find",table:table,query:query});return new Promise(function(resolve,reject){var cacheKey=_this6.getDbCacheKey?_this6.getDbCacheKey({op:"find",dbName:_this6.getDBName(),table:table}):void 0;_this6.connectDB(cacheKey).then(function(mongoDB){mongoDB.collection(table).find(filter,_extends({fields:fields},restOptions)).toArray(function(err,result){if(err){reject(err);return;}endLog&&endLog();endProfiler&&endProfiler();resolve({result:result});});}).catch(function(e){reject(e);});});}},{key:"insert",value:function insert(table,_insert,subModelChanges,options){var _this7=this;var _ref7=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{},logger=_ref7.logger;var endLog=logger&&logger.startLog({op:"insert",table:table,log:{insert:_insert},native:true});return new Promise(function(resolve,reject){_this7.connectDB().then(function(mongoDB){var newValue=_extends({},_insert);if(subModelChanges){for(var k in subModelChanges){var changes=subModelChanges[k];if(changes.insert){var nestedArray=changes.insert.map(function(nestedInsert){return _extends({},nestedInsert);});newValue[k]=nestedArray;}}}mongoDB.collection(table).insertOne(newValue,options,function(err,result){if(err){reject(err);}else{endLog&&endLog();resolve({result:result.ops[0]});}});}).catch(function(e){return reject(e);});});}},{key:"insertMany",value:function insertMany(table,insert){var _this8=this;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return new Promise(function(resolve,reject){_this8.connectDB().then(function(mongoDB){mongoDB.collection(table).insertMany(insert,options,function(err,result){if(err){reject(err);}else{resolve({result:result.insertedIds});}});}).catch(function(e){return reject(e);});});}},{key:"remove",value:function remove(table,filter){var _this9=this;return new Promise(function(resolve,reject){var options={w:1};_this9.connectDB().then(function(mongoDB){mongoDB.collection(table).removeOne(filter,options,function(err,result){if(err){reject(err);return;}resolve(result.result||result);});}).catch(function(e){return reject(e);});});}},{key:"removeMany",value:function removeMany(table,filter){var _this10=this;return new Promise(function(resolve,reject){var options={w:1};_this10.connectDB().then(function(mongoDB){mongoDB.collection(table).removeMany(filter,options,function(err,result){if(err){reject(err);return;}resolve(result.result||result);});}).catch(function(e){return reject(e);});});}},{key:"update",value:function update(table,filter,_update,subModelChanges){var _this11=this;var updateOptions=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var _ref8=arguments.length>5&&arguments[5]!==undefined?arguments[5]:{},logger=_ref8.logger;var $set=_update.$set,$unset=_update.$unset,$inc=_update.$inc,$pull=_update.$pull,$push=_update.$push;var endLog=logger&&logger.startLog({op:"update",table:table,log:{update:_update},native:true});var modifiedUpdates=void 0;if($set&&Object.keys($set).length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$set"]=$set;}if($inc&&Object.keys($inc).length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$inc"]=$inc;}if($unset&&Object.keys($unset).length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$unset"]=$unset;}if($pull&&Object.keys($pull).length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$pull"]=$pull;}if($push&&Object.keys($push).length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$push"]=$push;}var pendingChanges=null;var pendingPulls=null;if(subModelChanges){for(var k in subModelChanges){var changes=subModelChanges[k];var consumed=false;if(changes.insert){var nestedArray=changes.insert.map(function(nestedInsert){return _extends({},nestedInsert);});if(nestedArray.length){modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$push"]=modifiedUpdates["$push"]||{};modifiedUpdates["$push"][k]={};modifiedUpdates["$push"][k]["$each"]=nestedArray;consumed=true;}}if(changes.remove){var _nestedArray=changes.remove.map(function(nestedRemove){return nestedRemove._id;});if(_nestedArray.length){var pull={_id:{$in:_nestedArray}};if(consumed){pendingPulls=pendingPulls||{};pendingPulls[k]=pull;}else{modifiedUpdates=modifiedUpdates||{};modifiedUpdates["$pull"]=modifiedUpdates["$pull"]||{};modifiedUpdates["$pull"][k]=pull;consumed=true;}}}if(changes.update){pendingChanges=pendingChanges||[];changes.update.forEach(function(nestedUpdate){var nestedFilter=_extends(_defineProperty({},k+"._id",nestedUpdate._id),filter);var nestedUpdates={};for(var j in nestedUpdate.changes){var value=nestedUpdate.changes[j];var nestedKey=k+".$."+j;if(value===null||value===void 0){nestedUpdates.$unset=nestedUpdates.$unset||{};nestedUpdates.$unset[nestedKey]="";}else{nestedUpdates.$set=nestedUpdates.$set||{};nestedUpdates.$set[nestedKey]=value;}}if(getNullOrObject(nestedUpdates)){pendingChanges.push({filter:nestedFilter,updates:nestedUpdates});}});}}}return new Promise(function(resolve,reject){if(!modifiedUpdates&&!pendingChanges&&!pendingPulls){resolve();return;}_this11.connectDB().then(function(mongoDB){var options={w:1};return updateNative(mongoDB,table,filter,modifiedUpdates,_extends({},options,updateOptions)).then(function(result){if(pendingPulls||pendingChanges){return runPendingPulls(mongoDB,table,filter,pendingPulls,options).then(function(){if(pendingChanges&&pendingChanges.length>0){return runPendingUpdates(mongoDB,table,pendingChanges,options);}}).then(function(){resolve({result:result});});}else{endLog&&endLog();resolve({result:result});}}).catch(function(e){return reject(e);});}).catch(function(e){return reject(e);});});}},{key:"commit",value:function commit(){}},{key:"rollback",value:function rollback(){}},{key:"findAndModify",value:function findAndModify(table,query,update,sort,options){var _this12=this;options=options||{};options.w=1;return new Promise(function(resolve,reject){_this12.connectDB().then(function(mongoDB){mongoDB.collection(table).findAndModify(query,sort,update,options,function(err,result){if(err){reject(err);return;}resolve(result);});});});}},{key:"sequence",value:function sequence(table,filter,update){var _this13=this;return new Promise(function(resolve,reject){_this13.connectDB().then(function(mongoDB){var sort=[];var options={new:true,upsert:true};mongoDB.collection(table).findAndModify(filter,sort,update,options,function(err,result){if(err){reject(err);return;}resolve({result:result});});}).catch(function(e){reject(e);});});}},{key:"getIndexes",value:function getIndexes(table){var _this14=this;return new Promise(function(resolve,reject){_this14.connectDB().then(function(mongoDB){mongoDB.collection(table).indexes(function(err,indexes){if(err){if(err.code===26){resolve();}else{reject(err);}return;}resolve(indexes);});}).catch(function(e){reject(e);});});}},{key:"dropIndex",value:function dropIndex(table,indexname){var _this15=this;return new Promise(function(resolve,reject){_this15.connectDB().then(function(mongoDB){mongoDB.collection(table).dropIndex(indexname,function(err,result){if(err){reject(err);return;}resolve({result:result});});}).catch(function(e){reject(e);});});}},{key:"createIndex",value:function createIndex(table,index,options){var _this16=this;return new Promise(function(resolve,reject){_this16.connectDB().then(function(mongoDB){mongoDB.collection(table).createIndex(index,options,function(err,result){if(err){reject(err);return;}resolve({result:result});});}).catch(function(e){reject(e);});});}}]);return MongoConnect;}();exports.default=MongoConnect;