Object.defineProperty(exports,"__esModule",{value:true});exports.sendMail=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _DBConnect=require("./DBConnect");var _rhsCommon=require("rhs-common");var sendMail=exports.sendMail=function sendMail(_ref){var options=_ref.options,credentials=_ref.credentials;try{if(!options){throw new Error("Mandatory options are missing in send mail.");}if(!credentials||!credentials.APP_SENDGRID_KEY){throw new Error("Mail Credentials Not Found");}return _rhsCommon.Pipeline.of("Send Mail - Pipeline").param({}).add(function(){return addAttachmentIfRequired(options);}).add(function(){return sendMailFromSendGrid(options,credentials);},function(param,result){return result;});}catch(err){throw err;}};var sendMailFromSendGrid=function sendMailFromSendGrid(options,credentials){return new Promise(function(resolve,reject){var newOptions=modifyOptionsToV3(options,credentials);if(!newOptions.from){throw new Error("from is mandatory in sending mail");}try{var sendGrid=require("sendgrid")(credentials.APP_SENDGRID_KEY);var request=sendGrid.emptyRequest({method:"POST",path:"/v3/mail/send",body:newOptions});sendGrid.API(request,function(error,response){var statusCode=response&&response.statusCode;if(error){if(statusCode===401){error=new Error("Authentication Failed");}error.code=statusCode;resolve(getErrorResponse(error));return;}var messageId=response.headers&&response.headers["x-message-id"];var finalResponse={statusCode:statusCode,messageId:messageId};var responseMessage=response.body;if(responseMessage&&typeof responseMessage!=="string"){responseMessage=JSON.stringify(responseMessage);}if(!responseMessage&&(statusCode===200||statusCode===202)){responseMessage="Email Sent";}finalResponse.responseMessage=responseMessage;resolve(finalResponse);});}catch(err){resolve(getErrorResponse(err));}});};function modifyOptionsToV3(options,credentials){var to=options.to,bcc=options.bcc,cc=options.cc,from=options.from,fromName=options.fromName,text=options.text,html=options.html,attachments=options.attachments,subject=options.subject,headers=options.headers;var newOptions={personalizations:[]};var personalizations={};if(to){personalizations.to=resolveMailInfo(to);}if(bcc){personalizations.bcc=resolveMailInfo(bcc);}if(cc){personalizations.cc=resolveMailInfo(cc);}if(headers){personalizations.headers=headers;}personalizations.subject=subject||text;newOptions.personalizations.push(personalizations);if(!from){from=credentials.APP_SENDGRID_FROM;fromName=fromName||credentials.APP_SENDGRID_FROM_NAME;}if(from){newOptions.from=resolveMailInfo(from)[0];if(fromName){newOptions.from.name=fromName;}}if(html){newOptions.content=[{type:"text/html",value:html}];}else if(text){newOptions.content=[{type:"text/plain",value:text}];}if(attachments&&attachments.length>0){newOptions.attachments=resolveAttachmentForSendGrid(attachments);}return newOptions;}function resolveAttachmentForSendGrid(attachments){return attachments.map(function(_ref2){var filename=_ref2.filename,contentType=_ref2.contentType,content=_ref2.content;var name=filename;var type="txt";var index=filename.lastIndexOf(".");if(index>0){name=filename.substring(0,index);type=filename.substring(index+1);}return{content:content.toString("base64"),type:type,filename:filename,disposition:"inline",content_id:new Date().getTime().toString()};});}function resolveMailInfo(value){if(value&&typeof value==="string"){var emails=value.split(",");return emails.map(function(row){return{email:row};});}else if(Array.isArray(value)){return value.map(function(row){if(typeof row==="string"){row={email:row};}return row;});}}var getErrorResponse=function getErrorResponse(err){return{status:"Error",errorBody:err.response&&err.response.body,responseMessage:err.message||err.stack,statusCode:err.code};};var addAttachmentIfRequired=function addAttachmentIfRequired(options){var filesInfo=options.attachments;if(filesInfo){if(!Array.isArray(filesInfo)){filesInfo=[filesInfo];}var attachments=[];var pipeline=_rhsCommon.Pipeline.of("mail-pipeline").param({});filesInfo.forEach(function(fileInfo){if(fileInfo.key){pipeline.add(function(){return(0,_DBConnect.invoke)("_downloadFile",fileInfo.key);},function(accum,fileData){attachments.push({filename:fileData.fileName,contentType:fileData.contentType,content:new Buffer(fileData.data,"utf-8")});});}else if(fileInfo.content){attachments.push(_extends({},fileInfo,{content:new Buffer(fileInfo.content,"utf-8")}));}else{throw new Error("Either key or content should defined in files to send attachment in mail.");}});options.attachments=attachments;return pipeline;}};