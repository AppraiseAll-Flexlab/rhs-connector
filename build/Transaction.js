Object.defineProperty(exports,"__esModule",{value:true});exports._rollbackPendingTxs=exports.default=undefined;var _this9=this;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _rhsCommon=require("rhs-common");var _DBConnect=require("./DBConnect");var _TxPendingHandler=require("./TxPendingHandler");function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var deepEqual=_rhsCommon.PureFunctions.deepEqual,isJSONObject=_rhsCommon.PureFunctions.isJSONObject,resolveValue=_rhsCommon.PureFunctions.resolveValue,matchedIndex=_rhsCommon.PureFunctions.matchedIndex;var ObjectId=require("mongodb").ObjectID;var Transaction=function(){function Transaction(db,txid){var _this=this;var _ref=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref.logger,port=_ref.port,mailConfig=_ref.mailConfig,context=_ref.context;_classCallCheck(this,Transaction);this.getTxId=function(){return _this.txid;};this.getDB=function(){return _this._db;};this.setTxInfo=function(info){var txId=_this.txid;if(txId){_this.txInfo=_this.txInfo||{};_this.txInfo[txId]=_this.txInfo[txId]||[];_this.txInfo[txId].push(info);}};this._db=db;this.txid=txid||new ObjectId();this.txEnabled=true;this.logger=logger;this.port=port;this.mailConfig=mailConfig;this.context=context;}_createClass(Transaction,[{key:"clone",value:function clone(){return new Transaction(this._db,void 0,{port:this.port,mailConfig:this.mailConfig,context:this.context});}},{key:"dropDB",value:function dropDB(){return this._db.dropDB();}},{key:"upload",value:function upload(file){return this._db.upload(file);}},{key:"download",value:function download(key){return this._db.download(key);}},{key:"downloadStream",value:function downloadStream(key){return this._db.downloadStream(key);}},{key:"aggregate",value:function aggregate(table,query){var _this2=this;this.setProcessing(true,{table:table,query:query});return this._db.aggregate(table,query,{logger:this.logger}).then(function(res){_this2.setProcessing(false);return res;});}},{key:"getProcessingInfo",value:function getProcessingInfo(info){return"Invokes in array are "+JSON.stringify(this.invokes)+" >>> processing info is >>>>"+JSON.stringify(this.processingInfo)+">>>current info is >>>> "+JSON.stringify(info);}},{key:"setProcessing",value:function setProcessing(processingState,info){if(processingState&&this.processing){var error=new Error("Transaction is already in processing state. "+this.getProcessingInfo(info));return handlePendingTransactionError(error,this.context,this._db);}if(processingState){this.processingInfo=info;}else{this.processingInfo=null;}this.processing=processingState;}},{key:"find",value:function find(table,query){var _this3=this;this.setProcessing(true,{table:table,query:query});return this._db.find(table,query,{logger:this.logger}).then(function(res){_this3.setProcessing(false);return res;});}},{key:"invoke",value:function invoke(methodName,methodParams,args){var _this4=this;this.invokes=this.invokes||[];this.invokes.push(methodName);var currentProcess=this._db.invoke(methodName,methodParams,args);if(currentProcess&&currentProcess.then){return currentProcess.then(function(resp){if(_this4.processing){var error=new Error("Transaction is already in processing state. "+_this4.getProcessingInfo());return handlePendingTransactionError(error,_this4.context,_this4._db);}_this4.invokes.pop();return resp;});}else if(currentProcess&&currentProcess._then&&!currentProcess._async){currentProcess._then(function(resp){if(_this4.processing){var error=new Error("Transaction is already in processing state. "+_this4.getProcessingInfo());return handlePendingTransactionError(error,_this4.context,_this4._db);}_this4.invokes.pop();return resp;});return currentProcess;}else{if(this.processing){var error=new Error("Transaction is already in processing state. "+this.getProcessingInfo());return handlePendingTransactionError(error,this.context,this._db);}this.invokes.pop();return currentProcess;}}},{key:"insert",value:function insert(table,_insert,subModelChanges,options){var _this5=this;var _ref2=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{},skipTx=_ref2.skipTx;this.updated=true;!skipTx&&this.setProcessing(true,{table:table,insert:_insert});return beforeInsert({table:table,insert:_insert,subModelChanges:subModelChanges,txid:this.txid,port:this.port,skipTx:skipTx,context:this.context},this._db).then(function(_){return _this5._db.insert(table,_insert,subModelChanges,options,{logger:_this5.logger}).then(function(result){!skipTx&&_this5.setProcessing(false);return result;});});}},{key:"remove",value:function remove(table,filter){var _this6=this;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _ref3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},skipTx=_ref3.skipTx;this.updated=true;!skipTx&&this.setProcessing(true,{table:table,filter:filter});return beforeDelete(_extends({},options,{table:table,txid:this.txid,port:this.port,skipTx:skipTx,status:this.status,context:this.context}),this._db).then(function(_){var many=options.many;if(many){return _this6._db.removeMany(table,filter).then(function(result){!skipTx&&_this6.setProcessing(false);return result;});}else{return _this6._db.remove(table,filter).then(function(result){!skipTx&&_this6.setProcessing(false);return result;});}});}},{key:"update",value:function update(table,filter,_update,subModelChanges){var _this7=this;var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var _ref4=arguments.length>5&&arguments[5]!==undefined?arguments[5]:{},skipTx=_ref4.skipTx;this.updated=true;!skipTx&&this.setProcessing(true,{table:table,filter:filter,update:_update});return beforeUpdate(_extends({},options,{update:_update,subModelChanges:subModelChanges,filter:filter,table:table,txid:this.txid,port:this.port,skipTx:skipTx,context:this.context}),this._db).then(function(_){return _this7._db.update(table,filter,_update,subModelChanges,options,{logger:_this7.logger}).then(function(result){!skipTx&&_this7.setProcessing(false);return result;});});}},{key:"findAndModify",value:function findAndModify(table,query,update,sort){var _this8=this;var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};this.setProcessing(true,{table:table,filter:query,update:update});return this._db.findAndModify(table,query,update,sort,options).then(function(result){_this8.setProcessing(false);return result;});}},{key:"commit",value:function commit(){var endLog,error;return regeneratorRuntime.async(function commit$(_context){while(1){switch(_context.prev=_context.next){case 0:endLog=this.logger&&this.logger.startLog({op:"Commit"});if(!(this.context&&this.context.MODE==="prod"&&!this.txid)){_context.next=4;break;}error=new Error("Transaction id not found while committing");return _context.abrupt("return",handlePendingTransactionError(error,this.context,this._db,"Transaction id not found"));case 4:if(this.txid){_context.next=6;break;}throw new Error("Transaction id is mandatory");case 6:if(!this.updated){_context.next=10;break;}_context.next=9;return regeneratorRuntime.awrap(commitTransaction(this));case 9:delete this.updated;case 10:endLog&&endLog();delete this.txid;case 12:case"end":return _context.stop();}}},null,this);}},{key:"rollback",value:function rollback(dbConnect){var endLog,error;return regeneratorRuntime.async(function rollback$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:endLog=this.logger&&this.logger.startLog({op:"Rollback"});if(!(this.context&&this.context.MODE==="prod"&&!this.txid)){_context2.next=4;break;}error=new Error("Transaction id not found while rollback");return _context2.abrupt("return",handlePendingTransactionError(error,this.context,this._db,"Transaction id not found"));case 4:if(this.txid){_context2.next=6;break;}throw new Error("Transaction id is mandatory");case 6:if(!this.updated){_context2.next=10;break;}_context2.next=9;return regeneratorRuntime.awrap(handleRollback(this,dbConnect));case 9:delete this.updated;case 10:endLog&&endLog();delete this.txid;case 12:case"end":return _context2.stop();}}},null,this);}},{key:"sequence",value:function sequence(table,filter,update){var sequenceResult,error,updateField,txSequenceResult,number,recordId,txInsert;return regeneratorRuntime.async(function sequence$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:this.setProcessing(true,{table:table,filter:filter,update:update});_context3.next=3;return regeneratorRuntime.awrap(this._db.sequence(table,filter,update));case 3:sequenceResult=_context3.sent;if(!(this.context&&this.context.MODE==="prod"&&!this.txid)){_context3.next=7;break;}error=new Error("Transaction id not found while increasing sequence number");return _context3.abrupt("return",handlePendingTransactionError(error,this.context,this._db,"Transaction id not found"));case 7:if(this.txid){_context3.next=9;break;}throw new Error("Transaction id is mandatory");case 9:this.updated=true;updateField=update&&update.$inc?Object.keys(update.$inc)[0]:void 0;txSequenceResult=sequenceResult&&sequenceResult.result;if(!(updateField&&txSequenceResult)){_context3.next=18;break;}number=txSequenceResult&&txSequenceResult.value[updateField];recordId=txSequenceResult&&txSequenceResult.value._id;txInsert={tx:{collection:table,type:"sequence",updateField:updateField,update:{_id:recordId,number:number,filter:filter}},status:"Pending",txid:this.txid,port:this.port,createdDate:new Date()};_context3.next=18;return regeneratorRuntime.awrap(insertTransactionDetails(this._db,txInsert));case 18:this.setProcessing(false);return _context3.abrupt("return",sequenceResult);case 20:case"end":return _context3.stop();}}},null,this);}}]);return Transaction;}();exports.default=Transaction;var beforeInsert=function beforeInsert(_ref5,db){var table=_ref5.table,insert=_ref5.insert,txid=_ref5.txid,port=_ref5.port,skipTx=_ref5.skipTx,context=_ref5.context;var error,_id,TxInsert;return regeneratorRuntime.async(function beforeInsert$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(context&&context.MODE==="prod"&&!txid)){_context4.next=3;break;}error=new Error("Transaction id not found in before insert");return _context4.abrupt("return",handlePendingTransactionError(error,context,db,"Transaction id not found"));case 3:if(txid){_context4.next=5;break;}throw new Error("Transaction id is mandatory");case 5:if(!skipTx){_context4.next=7;break;}return _context4.abrupt("return",new Promise(function(res){return res();}));case 7:_id=insert._id;if(!_id||typeof _id=="string"&&_id.indexOf("new_")==0){_id=new ObjectId();insert._id=_id;}insert.__txs__=_defineProperty({},txid,{});TxInsert={tx:{collection:table,delete:{_id:_id}},status:"Pending",txid:txid,port:port,createdDate:new Date()};_context4.next=13;return regeneratorRuntime.awrap(insertTransactionDetails(db,TxInsert));case 13:return _context4.abrupt("return",_context4.sent);case 14:case"end":return _context4.stop();}}},null,_this9);};var beforeDelete=function beforeDelete(_ref6,db){var table=_ref6.table,old=_ref6.old,filter=_ref6.filter,txid=_ref6.txid,port=_ref6.port,skipTx=_ref6.skipTx,context=_ref6.context;var error,txInsert;return regeneratorRuntime.async(function beforeDelete$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(context&&context.MODE==="prod"&&!txid)){_context5.next=3;break;}error=new Error("Transaction id not found in before delete");return _context5.abrupt("return",handlePendingTransactionError(error,context,db,"Transaction id not found"));case 3:if(txid){_context5.next=5;break;}throw new Error("Transaction id is mandatory");case 5:if(!skipTx){_context5.next=7;break;}return _context5.abrupt("return",new Promise(function(res){return res();}));case 7:txInsert={tx:{collection:table,insert:old},status:"Pending",txid:txid,port:port,createdDate:new Date()};_context5.next=10;return regeneratorRuntime.awrap(insertTransactionDetails(db,txInsert));case 10:return _context5.abrupt("return",_context5.sent);case 11:case"end":return _context5.stop();}}},null,_this9);};var beforeUpdate=function beforeUpdate(_ref7,db){var update=_ref7.update,old=_ref7.old,filter=_ref7.filter,subModelChanges=_ref7.subModelChanges,table=_ref7.table,txid=_ref7.txid,port=_ref7.port,skipTx=_ref7.skipTx,context=_ref7.context;var error,recordId,isUpdateRequired,alreadyInProgress,data,i,transaction,txInsert;return regeneratorRuntime.async(function beforeUpdate$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(context&&context.MODE==="prod"&&!txid)){_context6.next=3;break;}error=new Error("Transaction id not found in before update");return _context6.abrupt("return",handlePendingTransactionError(error,context,db,"Transaction id not found"));case 3:if(txid){_context6.next=5;break;}throw new Error("Transaction id is mandatory");case 5:if(!skipTx){_context6.next=7;break;}return _context6.abrupt("return",new Promise(function(res){return res();}));case 7:recordId=filter._id;isUpdateRequired=true;alreadyInProgress=false;_context6.next=12;return regeneratorRuntime.awrap(getTransactions({filter:{txid:txid,"tx.collection":table}},db));case 12:data=_context6.sent;data=data&&data.result;for(i=0;i<data.length;i++){transaction=data[i];if(transaction.tx.insert&&deepEqual(transaction.tx.insert._id,recordId)||data[i].tx.delete&&deepEqual(data[i].tx.delete._id,recordId)){isUpdateRequired=false;}else if(transaction.tx.update&&deepEqual(transaction.tx.update._id,recordId)){alreadyInProgress=true;}}if(!(isUpdateRequired&&!alreadyInProgress)){_context6.next=19;break;}txInsert={tx:{collection:table,update:{_id:recordId}},status:"Pending",txid:txid,port:port,createdDate:new Date()};_context6.next=19;return regeneratorRuntime.awrap(insertTransactionDetails(db,txInsert));case 19:if(isUpdateRequired){updateDocument({txid:txid,update:update,old:old,subModelChanges:subModelChanges,recordId:recordId});}case 20:case"end":return _context6.stop();}}},null,_this9);};function updateDocument(_ref8){var txid=_ref8.txid,update=_ref8.update,old=_ref8.old,subModelChanges=_ref8.subModelChanges,recordId=_ref8.recordId;old=old||{};var previousTransaction=old["__txs__"]||{};var pTx=previousTransaction[txid];if(pTx!==void 0){pTx=pTx.tx||{};}else{pTx={_id:recordId,array:[]};}updateTransaction(pTx,update,subModelChanges,old);update.$set=update.$set||{};update.$set["__txs__."+txid]={tx:pTx};}function updateTransaction(tx,updates,subModelChanges,old){var $set=updates.$set,$unset=updates.$unset,$inc=updates.$inc;for(var updatedField in $set){if(updatedField==="__txs__"){continue;}handleSet(tx,{field:updatedField,data:$set,old:old});}for(var _updatedField in $unset){if(_updatedField==="__txs__"){continue;}handleSet(tx,{field:_updatedField,data:$unset,old:old});}for(var _updatedField2 in $inc){if(_updatedField2==="__txs__"){continue;}handleInc(tx,{field:_updatedField2,data:$inc,old:old});}handleArrayDataValues(tx.array,subModelChanges,old);}function handleArrayDataValues(array,subModelChanges,old){if(subModelChanges){var _loop=function _loop(){var changes=subModelChanges[field];oldValues=old[field];if(Array.isArray(changes)||!isJSONObject(changes)){throw new Error("Transaction for value "+JSON.stringify(changes)+" is not handled");}if(changes.insert){var nestedArray=changes.insert.map(function(nestedInsert){var nestedId=nestedInsert._id;if(!nestedId||typeof nestedId=="string"&&nestedId.indexOf("new_")==0){nestedId=new ObjectId();}var exists=matchedIndex(array,{_id:nestedId},"_id");var actualNestedValue=_extends({},nestedInsert,{_id:nestedId});if(exists===void 0){array.push({_id:nestedId,type:"delete",field:field,uniqueId:new ObjectId()});}return actualNestedValue;});changes.insert=nestedArray;}var oldValuesMap=oldValues&&oldValues.reduce(function(prev,value){prev[value._id]=value;return prev;},{})||{};if(changes.remove){var _nestedArray=changes.remove.map(function(nestedRemove){var documentId=nestedRemove._id;var exists=matchedIndex(array,{_id:documentId},"_id");if(exists===void 0){array.push({_id:documentId,type:"insert",field:field,value:oldValuesMap[documentId],uniqueId:new ObjectId()});}else{array.unshift({_id:documentId,type:"insert",field:field,value:oldValuesMap[documentId],uniqueId:new ObjectId()});}return nestedRemove._id;});}if(changes.update){changes.update.forEach(function(nestedUpdate){var documentId=nestedUpdate._id;var exists=matchedIndex(array,{_id:documentId},"_id");if(exists===void 0){var updates={_id:documentId,field:field,type:"update",uniqueId:new ObjectId()};array.push(updates);var oldValues=oldValuesMap[documentId];handleArrayUpdates(nestedUpdate.changes,updates,oldValues);}else{var oldTransactionUpdate=array[exists];if(oldTransactionUpdate.type==="update"){var oldValues=oldValuesMap[documentId];handleArrayUpdates(nestedUpdate.changes,oldTransactionUpdate,oldValues);}}});}};for(var field in subModelChanges){var oldValues;_loop();}}}var handleArrayUpdates=function handleArrayUpdates(changes,arrayUpdate,old){for(var field in changes){var value=changes[field];handleSet(arrayUpdate,{field:field,data:value,old:old});}};function handleInc(tx,_ref9){var field=_ref9.field,data=_ref9.data,old=_ref9.old;tx.inc=tx.inc||[];if(isParentModifiedInSameTx(tx.set,field)===void 0){var index=isParentModifiedInSameTx(tx.inc,field);var value=data[field];if(index!==void 0){var oldValue=tx.inc[index].value;tx.inc[index].value=oldValue+-1*value;}else{tx.inc.push({key:field,value:-1*value});}}}var handleSet=function handleSet(tx,_ref10){var field=_ref10.field,data=_ref10.data,old=_ref10.old;tx.set=tx.set||[];if(isParentModifiedInSameTx(tx.set,field)===void 0){var oldValue=resolveValue(old,field);if(oldValue===void 0||oldValue===null){if(isChildModifiedInSameTx(tx.set,field)===void 0){if(resolveValue(data,field)!==null){tx.set.push({key:field,value:null});}}}else{if(isJSONObject(oldValue)){for(var key in oldValue){handleSet(tx,{field:field+"."+key,data:data,old:old});}}else{tx.set.push({key:field,value:oldValue});}}}};function isParentModifiedInSameTx(txValue,newKey){if(!txValue||!txValue.length){return;}for(var j=0;j<txValue.length;j++){if(txValue[j].key===newKey||newKey.indexOf(txValue[j].key+".")===0){return j;}}}function isChildModifiedInSameTx(txValue,newKey){if(!txValue||!txValue.length){return;}for(var j=0;j<txValue.length;j++){if(txValue[j].key.indexOf(newKey+".")===0){return j;}}return;}var commitTransaction=function commitTransaction(transactionInstance){var txid,db,transactions,i,_transactions$i,_id,tx;return regeneratorRuntime.async(function commitTransaction$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:txid=transactionInstance.getTxId();db=transactionInstance.getDB();_context7.next=4;return regeneratorRuntime.awrap(db.update("TXS",{txid:txid},{$set:{status:"Commiting"}},void 0,{multi:true}));case 4:_context7.next=6;return regeneratorRuntime.awrap(db.remove("TXS",{txid:txid,status:"Commiting","tx.insert":{$exists:true}}));case 6:_context7.next=8;return regeneratorRuntime.awrap(getTransactions({filter:{status:"Commiting",txid:txid}},db));case 8:transactions=_context7.sent;transactions=transactions&&transactions.result;i=0;case 11:if(!(i<transactions.length)){_context7.next=26;break;}_transactions$i=transactions[i],_id=_transactions$i._id,tx=_transactions$i.tx;if(!(tx.update!==void 0)){_context7.next=18;break;}_context7.next=16;return regeneratorRuntime.awrap(removeTxsFromRecord({txid:txid,table:tx.collection,filter:{_id:tx.update._id}},db));case 16:_context7.next=21;break;case 18:if(!(tx.delete!==void 0)){_context7.next=21;break;}_context7.next=21;return regeneratorRuntime.awrap(removeTxsFromRecord({txid:txid,table:tx.collection,filter:{_id:tx.delete._id}},db));case 21:_context7.next=23;return regeneratorRuntime.awrap(deleteTransaction(_id,db));case 23:i++;_context7.next=11;break;case 26:case"end":return _context7.stop();}}},null,_this9);};var getTransactions=function getTransactions(_ref11,db){var table=_ref11.table,filter=_ref11.filter,rest=_objectWithoutProperties(_ref11,["table","filter"]);return db.find("TXS",_extends({filter:filter,sort:{_id:-1},fields:{_id:1,tx:1,db:1}},rest));};function deleteTransaction(recordId,db){return regeneratorRuntime.async(function deleteTransaction$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:return _context8.abrupt("return",db.remove("TXS",{_id:recordId}));case 1:case"end":return _context8.stop();}}},null,this);}var removeTxsFromRecord=function removeTxsFromRecord(_ref12,db){var txid=_ref12.txid,table=_ref12.table,filter=_ref12.filter;return db.update(table,filter,{$unset:_defineProperty({},"__txs__."+txid,"")});};var insertTransactionDetails=function insertTransactionDetails(db,TxInsert){return db.insert("TXS",TxInsert);};var handleRollback=function handleRollback(transactionInstance,dbConnect,previousTransaction){var txid,db,transactions,transaction,err;return regeneratorRuntime.async(function handleRollback$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:txid=transactionInstance.getTxId();db=transactionInstance.getDB();_context9.next=4;return regeneratorRuntime.awrap(getTransactions({filter:{txid:txid},limit:1},db));case 4:transactions=_context9.sent;transactions=transactions&&transactions.result;transaction=transactions&&transactions.length>0?transactions[0]:void 0;if(!(transaction&&transaction.tx)){_context9.next=13;break;}if(!deepEqual(transaction._id,previousTransaction)){_context9.next=12;break;}err=new Error("Unable to rollback as count is not getting decrementing in updates array >>>"+JSON.stringify(transaction));sendMailforErrorInRollBack(err,transaction,dbConnect,transactionInstance.mailConfig);throw err;case 12:return _context9.abrupt("return",processRollbackUpdates(transactionInstance,transaction,{txid:txid,db:db},dbConnect).then(function(){return deleteTransaction(transaction._id,db);}).then(function(){return handleRollback(transactionInstance,dbConnect,transaction._id);}).catch(function(err){sendMailforErrorInRollBack(err,transaction,dbConnect,transactionInstance.mailConfig);throw err;}));case 13:case"end":return _context9.stop();}}},null,_this9);};function processRollbackUpdates(transactionInstance,data,_ref13,dbConnect){var txid=_ref13.txid,db=_ref13.db;var tx=data.tx;if(tx){var collection=tx.collection;var txInfo={status:"rollback",type:collection,info:tx};transactionInstance.setTxInfo(txInfo);if(tx.insert!==void 0){try{return db.insert(collection,tx.insert);}catch(err){if(err.code!==11000){throw err;}}}else if(tx.delete!==void 0){return db.remove(collection,_defineProperty({_id:tx.delete._id},"__txs__."+txid,{$exists:true}));}else if(tx.update!==void 0&&tx.type=="sequence"){var _extends2;var sequenceFilter=tx.update.filter;var filter=_extends((_extends2={},_defineProperty(_extends2,tx.updateField,tx.update.number),_defineProperty(_extends2,"_id",tx.update._id),_extends2),sequenceFilter);return db.update(collection,filter,{$inc:_defineProperty({},tx.updateField,-1)});}else{return rollbackFromRecord(data._id,tx,collection,undefined,db,txid,txInfo,dbConnect,transactionInstance.mailConfig);}}}function rollbackFromRecord(_id,tx,collection,initialArrayCount,db,txid,txInfo,dbConnect,mailConfig){var updates,data,transactions,txToRollback,id,array,newUpdate;return regeneratorRuntime.async(function rollbackFromRecord$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:updates=tx.update;_context10.next=3;return regeneratorRuntime.awrap(db.find(collection,{filter:{_id:updates._id},fields:{__txs__:1}}));case 3:data=_context10.sent;data=data&&data.result;if(!(!data||!data.length)){_context10.next=7;break;}return _context10.abrupt("return");case 7:transactions=data[0].__txs__||{};txToRollback=transactions[txid]?transactions[txid]["tx"]:void 0;if(!txToRollback){_context10.next=25;break;}if(txInfo){txInfo.info.update.__txs__=txToRollback;}id=txToRollback._id;array=txToRollback.array;if(!(array&&array.length>0)){_context10.next=22;break;}if(!(array.length==initialArrayCount)){_context10.next=16;break;}throw new Error("Unable to rollback array updates in record as array count is not getting decrementing in updates array >>>"+JSON.stringify(array));case 16:_context10.next=18;return regeneratorRuntime.awrap(handleArrayRollback({tx:array[0],id:id,txid:txid,collection:collection,db:db}));case 18:_context10.next=20;return regeneratorRuntime.awrap(rollbackFromRecord(_id,tx,collection,array.length,db,txid,txInfo,dbConnect,mailConfig));case 20:_context10.next=25;break;case 22:newUpdate={$unset:_defineProperty({},"__txs__."+txid,null)};_context10.next=25;return regeneratorRuntime.awrap(rollbackTopLevelFields(collection,txToRollback,newUpdate,db,dbConnect,mailConfig));case 25:case"end":return _context10.stop();}}},null,this);}function handleArrayRollback(_ref14){var tx=_ref14.tx,recordId=_ref14.id,txid=_ref14.txid,collection=_ref14.collection,db=_ref14.db;var type=tx.type;if(type==="insert"){return handleInsertOperationRollback({tx:tx,txid:txid,recordId:recordId,collection:collection,db:db});}else if(type==="delete"){return handleDeleteOperationRollback({tx:tx,txid:txid,recordId:recordId,collection:collection,db:db});}else{return handleUpdateOperationRollback({txid:txid,tx:tx,recordId:recordId,collection:collection,db:db});}}function handleInsertOperationRollback(_ref15){var tx=_ref15.tx,txid=_ref15.txid,recordId=_ref15.recordId,collection=_ref15.collection,db=_ref15.db;var push,sort,update;return regeneratorRuntime.async(function handleInsertOperationRollback$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:push={};sort={};if(tx.sort){sort[tx.sort]=1;}else{sort["_id"]=1;}push[tx.field]={$each:[tx.value],$sort:sort,$slice:-20000};update={$push:push};update.$pull={};update.$pull["__txs__."+txid+".tx.array"]={_id:tx._id,uniqueId:tx.uniqueId};_context11.next=9;return regeneratorRuntime.awrap(db.update(collection,{_id:recordId},update));case 9:case"end":return _context11.stop();}}},null,this);}function handleDeleteOperationRollback(_ref16){var tx=_ref16.tx,txid=_ref16.txid,recordId=_ref16.recordId,collection=_ref16.collection,db=_ref16.db;var pull,update;return regeneratorRuntime.async(function handleDeleteOperationRollback$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:pull={};pull[tx.field]={_id:tx._id};pull["__txs__."+txid+".tx.array"]={_id:tx._id,uniqueId:tx.uniqueId};update={$pull:pull};_context12.next=6;return regeneratorRuntime.awrap(db.update(collection,{_id:recordId},update));case 6:case"end":return _context12.stop();}}},null,this);}function handleUpdateOperationRollback(_ref17){var txid=_ref17.txid,tx=_ref17.tx,recordId=_ref17.recordId,collection=_ref17.collection,db=_ref17.db;var query,update,i,value;return regeneratorRuntime.async(function handleUpdateOperationRollback$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:query={};query._id=recordId;query[tx.field+"._id"]=tx._id;update={};if(tx.set!==void 0&&tx.set.length>0){for(i=0;i<tx.set.length;i++){value=tx.set[i].value;if(value){update["$set"]=update["$set"]||{};update.$set[tx.field+".$."+tx.set[i].key]=value;}else{update["$unset"]=update["$unset"]||{};update.$unset[tx.field+".$."+tx.set[i].key]=1;}}}if(tx.inc!==void 0&&tx.inc.length>0){update.$inc={};for(i=0;i<tx.inc.length;i++){update.$inc[tx.field+".$."+tx.inc[i].key]=tx.inc[i].value;}}update.$pull={};update.$pull["__txs__."+txid+".tx.array"]={_id:tx._id,uniqueId:tx.uniqueId};_context13.next=10;return regeneratorRuntime.awrap(db.update(collection,query,update));case 10:case"end":return _context13.stop();}}},null,this);}function rollbackTopLevelFields(collection,txToRollback,newUpdate,db,dbConnect,mailConfig){var i,innerKey,innerValue,matchedRecords,index;return regeneratorRuntime.async(function rollbackTopLevelFields$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(txToRollback.set&&txToRollback.set.length>0){for(i=0;i<txToRollback.set.length;i++){innerKey=txToRollback.set[i].key;innerValue=txToRollback.set[i].value;if(innerValue!==null){newUpdate["$set"]=newUpdate["$set"]||{};newUpdate.$set[innerKey]=innerValue;}else{newUpdate.$unset[innerKey]=innerValue;}}}matchedRecords={$inc:{}};if(txToRollback.inc&&txToRollback.inc.length>0){for(i=0;i<txToRollback.inc.length;i++){index=isParentModifiedInSameTx(txToRollback.set,txToRollback.inc[i].key);if(index){matchedRecords["$inc"][txToRollback.inc[i].key]=txToRollback.inc[i].value;}else{newUpdate["$inc"]=newUpdate["$inc"]||{};newUpdate["$inc"][txToRollback.inc[i].key]=txToRollback.inc[i].value;}}}_context14.prev=3;_context14.next=6;return regeneratorRuntime.awrap(db.update(collection,{_id:txToRollback._id},newUpdate));case 6:if(!(Object.keys(matchedRecords.$inc).length>0)){_context14.next=13;break;}_context14.t0=regeneratorRuntime;_context14.next=10;return regeneratorRuntime.awrap(db.update(collection,{_id:txToRollback._id},matchedRecords));case 10:_context14.t1=_context14.sent;_context14.next=13;return _context14.t0.awrap.call(_context14.t0,_context14.t1);case 13:_context14.next=23;break;case 15:_context14.prev=15;_context14.t2=_context14["catch"](3);if(!(_context14.t2.code!==11000&&_context14.t2.code!==16837)){_context14.next=21;break;}throw _context14.t2;case 21:if(!(_context14.t2.code===16837)){_context14.next=23;break;}return _context14.abrupt("return",sendMailforErrorInRollBack(_context14.t2,txToRollback,dbConnect,mailConfig));case 23:case"end":return _context14.stop();}}},null,this,[[3,15]]);}var sendMailforErrorInRollBack=function sendMailforErrorInRollBack(err,tx,dbConnect,mailConfig,recepients,subject){var os=require("os");var date=new Date();var options={};var _ref18=mailConfig||{},applicationDeveloper=_ref18.applicationDeveloper,frameworkDeveloper=_ref18.frameworkDeveloper;options.to=recepients||applicationDeveloper||frameworkDeveloper||["rohit.bansal@daffodilsw.com"];options.from="developer@daffodilsw.com";options.subject=subject||"Error in Rollback Transaction";options.html="\n       <p> Error: "+err.message+" </p></br>\n       <p> dir: "+__dirname+" </p></br>\n       <p> host: "+os.hostname()+" </p></br>\n       <p> Date: "+date+" </p></br>\n       <p> Stack: "+err.stack+" </p></br>  \n       <p> tx:"+JSON.stringify(tx)+" </p></br>\n    ";return dbConnect&&dbConnect((0,_DBConnect.invoke)("_sendMail",options));};var _rollbackPendingTxs=exports._rollbackPendingTxs=function _rollbackPendingTxs(db,_ref19){var port=_ref19.port,mailConfig=_ref19.mailConfig,dbConnect=_ref19.dbConnect,context=_ref19.context;var txInfos,i,txInfo,txId,status,transactionInstance;return regeneratorRuntime.async(function _rollbackPendingTxs$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:_context15.next=2;return regeneratorRuntime.awrap(db.aggregate("TXS",[{$match:{port:port}},{$sort:{status:1}},{$group:{_id:"$txid",status:{$first:"$status"}}}]));case 2:txInfos=_context15.sent;txInfos=txInfos&&txInfos.result;i=0;case 5:if(!(i<txInfos.length)){_context15.next=23;break;}txInfo=txInfos[i];txId=txInfo._id;if(txId){_context15.next=10;break;}return _context15.abrupt("continue",20);case 10:status=txInfo.status;transactionInstance=new Transaction(db,txId,{port:port,mailConfig:mailConfig,context:context});transactionInstance.updated=true;if(!(status==="committing")){_context15.next=18;break;}_context15.next=16;return regeneratorRuntime.awrap(transactionInstance.commit());case 16:_context15.next=20;break;case 18:_context15.next=20;return regeneratorRuntime.awrap(transactionInstance.rollback(dbConnect));case 20:i++;_context15.next=5;break;case 23:case"end":return _context15.stop();}}},null,_this9);};var handlePendingTransactionError=function handlePendingTransactionError(error,context,mongoConnect,subject){var _ref20=context||{},MODE=_ref20.MODE;if(MODE==="prod"){var dbConnect=(0,_DBConnect.DbConnect)(mongoConnect);var _subject=_subject||"Unresolve Promise Error";var recepients=["subhash.kumar@daffodilsw.com","amit@daffodilsw.com","rohit.bansal@daffodilsw.com"];return(0,_TxPendingHandler.sendUnresolvedMail)({dbConnect:dbConnect,error:error,recepients:recepients,subject:_subject});}else{throw error;}};